<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

    <context:annotation-config/>

    <!-- <tx:annotation-driven proxy-target-class="true" /> -->
    <bean class="config.SpringConfig"/>
    <!--<bean class="config.EditorConfigurer"/>-->


    <!-- the transactional advice (what 'happens'; see the <aop:advisor/> bean below) -->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <!-- the transactional semantics... -->
        <tx:attributes>
            <!-- all methods starting with 'get' are read-only -->
            <!--<tx:method name="get*" read-only="true"/>-->
            <!-- other methods use the default transaction settings (see below) -->
            <!--<tx:method name="*" no-rollback-for="EmptyResultDataAccessException"/>-->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <!-- ensure that the above transactional advice runs for any execution
        of an operation defined by the FooService interface -->
    <aop:config>
        <aop:pointcut
                id="fooServiceOperation" expression="execution(* ht.api..*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="fooServiceOperation"/>
    </aop:config>

    <!-- <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> -->
    <!--     <property name="dataSource" ref="dataSource"/> -->
    <!-- </bean> -->


    <!--   <context:component-scan base-package="config" /> -->
    <!--   <context:component-scan base-package="codix" /> -->

    <!--  an embeded database initializing -->
    <!--    <jdbc:initialize-database data-source="dataSource"> -->
    <!--     <jdbc:script location="classpath:com/foo/sql/db-schema.sql"/> -->
    <!--     <jdbc:script location="classpath:com/foo/sql/db-test-data.sql"/> -->
    <!-- </jdbc:initialize-database> -->


    <!--
            Configures view for returning JSON to the client
      -->
    <!--       <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">   -->
    <!--            <property name="contentType" value="text/plain"/>   -->
    <!--       </bean>   -->
    <!--
          maps handler methods based on HTTP paths
    -->
    <!--       <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">   -->
    <!--            <property name="messageConverters">   -->
    <!--                 <util:list id="beanList">   -->
    <!--                      <ref bean="jsonMessageConverter"/>   -->
    <!--                 </util:list>   -->
    <!--            </property>   -->
    <!--       </bean>   -->
    <!--
          Converts JSON to POJO and vice versa
    -->
    <!--       <bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>   -->


    <!-- <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> -->
    <!-- <property name="prefix"> -->
    <!-- <value>/WEB-INF/views/</value> -->
    <!-- </property> -->
    <!-- <property name="suffix"> -->
    <!-- <value>.jsp</value> -->
    <!-- </property> -->
    <!-- </bean> -->
</beans>
